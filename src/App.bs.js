// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_array from "rescript/lib/es6/caml_array.js";
import * as Todo$TestPresentationApp from "./Todo.bs.js";
import * as TodoNew$TestPresentationApp from "./TodoNew.bs.js";

function reducer(state, action) {
  switch (action.TAG | 0) {
    case /* Add */0 :
        var curLength = state.todos.length;
        var id = curLength === 0 ? 1 : Caml_array.get(state.todos, state.todos.length - 1 | 0).id + 1 | 0;
        return {
                todos: state.todos.concat([{
                        text: action._0,
                        id: id
                      }])
              };
    case /* Remove */1 :
        var id$1 = action._0;
        return {
                todos: state.todos.filter(function (todo) {
                      return todo.id !== id$1;
                    })
              };
    case /* Edit */2 :
        var newTodo = action._0;
        var newTodoList = state.todos.map(function (todo) {
              if (todo.id === newTodo.id) {
                return newTodo;
              } else {
                return todo;
              }
            });
        return {
                todos: newTodoList
              };
    
  }
}

var initialState = {
  todos: [{
      text: "jjj",
      id: 1
    }]
};

function App(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var handleRemoveTodo = function (id) {
    return Curry._1(dispatch, {
                TAG: /* Remove */1,
                _0: id
              });
  };
  var handleAddTodo = function (todo) {
    return Curry._1(dispatch, {
                TAG: /* Add */0,
                _0: todo
              });
  };
  var handleEditTodo = function (todo) {
    return Curry._1(dispatch, {
                TAG: /* Edit */2,
                _0: todo
              });
  };
  var todoList = match[0].todos.map(function (param) {
        var id = param.id;
        return React.createElement(Todo$TestPresentationApp.make, {
                    handleRemoveTodo: handleRemoveTodo,
                    id: id,
                    text: param.text,
                    handleEditTodo: handleEditTodo,
                    key: String(id)
                  });
      });
  return React.createElement("div", {
              className: "App"
            }, React.createElement("div", {
                  style: {
                    display: "flex",
                    width: "100%",
                    alignItems: "center",
                    flexDirection: "column"
                  }
                }, todoList), React.createElement(TodoNew$TestPresentationApp.make, {
                  handleAddTodo: handleAddTodo
                }));
}

var make = App;

export {
  reducer ,
  initialState ,
  make ,
  
}
/* react Not a pure module */
